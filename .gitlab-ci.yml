variables:
  VERSION_BASE: "1.0"
  GITLAB_REGISTRY: git.inplat.kr:5555
  GITLAB_PROJECT_PATH: inplat/pines-partner-web
  VERSION: ${VERSION_BASE}.${CI_PIPELINE_IID}
  DOCKER_IMAGE: ${GITLAB_REGISTRY}/${GITLAB_PROJECT_PATH}:${VERSION_BASE}.${CI_PIPELINE_IID}
  DOCKER_IMAGE_OPS: ${GITLAB_REGISTRY}/${GITLAB_PROJECT_PATH}/ops:${VERSION_BASE}.${CI_PIPELINE_IID}
  CONTAINER_NAME: inplat.pines-partner-web

stages:
  - test-build
  - test-package
  - test-deploy
  - ops-build
  - ops-package
  - ops-deploy

job-test-build:
  stage: test-build
  image: node:lts-alpine
  tags:
    - docker
    - build
  only:
    - master
  allow_failure: false
  cache:
    key: ${CONTAINER_NAME}
    paths:
      - node_modules/
  artifacts:
    paths:
      - dev-build
      # - dist
      # - .deploy
    expire_in: 1 day
  script:
    - yarn global add @vue/cli@4.1.2
    - yarn
    - yarn build:dev
    - mkdir dev-build
    - mv dist dev-build
    - mv .deploy dev-build

job-test-package:
  stage: test-package
  tags:
    - docker
    - build
  only:
    - master
  when: on_success
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${GITLAB_REGISTRY}
  script:
    - cd dev-build
    - docker build -t ${DOCKER_IMAGE} -f .deploy/Dockerfile .
    - docker push ${DOCKER_IMAGE}

job-test-deploy:
  stage: test-deploy
  environment:
    name: test
  tags:
    - WS/192.168.0.240/docker
  only:
    - master
  when: on_success
  variables:
    GIT_STRATEGY: none
    # API_URL: "//test.inplat.kr:10000/api"
    # HOST: "0.0.0.0"
    HTTP_PORT: 10003
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${GITLAB_REGISTRY}
  script:
    - docker pull ${DOCKER_IMAGE}
    - docker stop ${CONTAINER_NAME} || true && docker rm ${CONTAINER_NAME} || true
    # -p ${HTTP_PORT}:${HTTP_PORT}
    - docker run -d --restart=unless-stopped --name ${CONTAINER_NAME} --log-opt max-size=50m
      -p ${HTTP_PORT}:80
      -e TZ=Asia/Seoul
      ${DOCKER_IMAGE}


job-ops-build:
  stage: ops-build
  image: node:lts-alpine
  tags:
    - docker
    - build
  only:
    - master
  when: manual
  allow_failure: false
  cache:
    key: $CONTAINER_NAME
    paths:
      - node_modules/
  artifacts:
    paths:
      - ops-build
      # - dist
      # - .deploy
    expire_in: 1 day
  script:
    - yarn global add @vue/cli@4.1.2
    - yarn
    - yarn build
    - mkdir ops-build
    - mv dist ops-build
    - mv .deploy ops-build

job-ops-package:
  stage: ops-package
  tags:
    - docker
    - build
  only:
    - master
  when: on_success
  variables:
    GIT_STRATEGY: none
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${GITLAB_REGISTRY}
  script:
    - cd ops-build
    - docker build -t ${DOCKER_IMAGE_OPS} -f .deploy/Dockerfile .
    - docker push ${DOCKER_IMAGE_OPS}

job-ops-deploy-people24:
  stage: ops-deploy
  environment:
    name: production
  tags:
    - people24/docker
  only:
    - master
  when: on_success
  variables:
    GIT_STRATEGY: none
    # API_URL: "//test.inplat.kr:10000/api"
    # HOST: "0.0.0.0"
    HTTP_PORT: 10003
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${GITLAB_REGISTRY}
  script:
    - docker pull ${DOCKER_IMAGE_OPS}
    - docker stop ${CONTAINER_NAME} || true && docker rm ${CONTAINER_NAME} || true
    # -p ${HTTP_PORT}:${HTTP_PORT}
    - docker run -d --restart=unless-stopped --name ${CONTAINER_NAME} --log-opt max-size=50m
      -p ${HTTP_PORT}:80
      -e TZ=Asia/Seoul
      ${DOCKER_IMAGE_OPS}
